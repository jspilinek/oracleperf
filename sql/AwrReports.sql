DEF filename = '99_AwrReports-Driver.sql';

SET TERMOUT ON;
PRO Generating &&filename
SET TERMOUT OFF;

DEF title = 'AWR Reports (DBA_HIST_SQLSTAT DBA_HIST_SNAPSHOT)';
DEF filename = 'AwrReports.html';
DEF nextpage = '00_oracleperf.html';
DEF prevpage = 'AwrRetention.html';
@@00_begin.sql

set serveroutput on size unlimited;
set linesize 1000;
SET HEADING OFF;
SET MARKUP HTML ENTMAP OFF;

SPOOL html/00_oracleperf.html APPEND
PRO <br>
PRO <a href="AwrReports.html">AWR Reports</a>

SPOOL html/AwrReports.html APPEND
PRO <table class="sortable">
PRO <tr><th>Report</th><th>Start Time</th><th>Duration<br>(hh:mi:ss)</th><th>SQL Elapsed<br>Time (s)</th></tr>

SPOOL OFF
SET MARK HTML OFF;
SPOOL sql/99_AwrReports-Driver.sql REPLACE

DECLARE /*gather_info_script*/

    lv_dbid v$database.dbid%TYPE;
    lv_instance_number v$instance.instance_number%TYPE;
    v_snap_id_start number;
    v_snap_id_end number;
    v_total_time number;
    v_start_time date;
    v_duration VARCHAR2(20);

BEGIN
dbms_output.put_line('--generated by AwrReports.sql');
    SELECT dbid INTO lv_dbid FROM v$database;
    SELECT instance_number INTO lv_instance_number FROM v$instance;
    
    FOR cur_snap IN (
        SELECT * FROM (
        SELECT
            s1.snap_id AS snap_start,
            s2.snap_id AS snap_end,
            ROUND(SUM(ss.elapsed_time_delta) / 1e6) AS total_time,
            TO_CHAR(s1.end_interval_time, 'YYYY-MM-DD HH24:MI:SS') AS start_time,
            TO_CHAR(TRUNC((CAST(s2.end_interval_time AS DATE) - CAST(s1.end_interval_time AS DATE)) * 86400 / 3600)) || ':' ||
            TO_CHAR(TRUNC(MOD((CAST(s2.end_interval_time AS DATE) - CAST(s1.end_interval_time AS DATE)) * 86400, 3600) / 60), 'FM00') || ':' ||
            TO_CHAR(TRUNC(MOD((CAST(s2.end_interval_time AS DATE) - CAST(s1.end_interval_time AS DATE)) * 86400, 60)), 'FM00') AS duration
        FROM 
            dba_hist_sqlstat ss
        JOIN 
            dba_hist_snapshot s1 ON ss.snap_id = s1.snap_id
        JOIN 
            dba_hist_snapshot s2 ON s1.snap_id + 1 = s2.snap_id
            AND s1.startup_time = s2.startup_time
        WHERE 
            s1.end_interval_time >= SYSDATE - 3
        GROUP BY 
            s1.snap_id, s2.snap_id, s1.end_interval_time, s2.end_interval_time
        ORDER BY 
            snap_start DESC
        )
        WHERE ROWNUM <= 100
    )
    LOOP
        dbms_output.put_line('SET TERMOUT ON;');
        dbms_output.put_line('PRO Generating AWR-Report-'||cur_snap.snap_start||'-'||cur_snap.snap_end||'.html');
        dbms_output.put_line('SET TERMOUT OFF;');
        dbms_output.put_line('SPOOL html/AWR-Report-'||cur_snap.snap_start||'-'||cur_snap.snap_end||'.html REPLACE');
        dbms_output.put_line('SELECT output FROM TABLE(DBMS_WORKLOAD_REPOSITORY.awr_report_html('||lv_dbid||','||lv_instance_number||','||cur_snap.snap_start||','||cur_snap.snap_end||'));');
        dbms_output.put_line('SPOOL html/AwrReports.html APPEND');
        dbms_output.put_line('PRO <tr><td><a href="AWR-Report-'||cur_snap.snap_start||'-'||cur_snap.snap_end||'.html">AWR-Report-'||cur_snap.snap_start||'-'||cur_snap.snap_end||'</a></td><td>'||cur_snap.start_time||'</td><td>'||cur_snap.duration||'</td><td>'||cur_snap.total_time||'</td></tr>');
        dbms_output.put_line('SPOOL OFF');
    END LOOP;
END;
/
SPOOL OFF
@@sql/99_AwrReports-Driver.sql

SPOOL html/AwrReports.html APPEND
PRO </table>

SET HEADING ON;

SET MARK HTML OFF;
PRO <h2>Comments</h2>
PRO <p>Limited to the last 3 days or 100 most recent reports</p>
PRO <p><b>Duration (hh:mi:ss)</b> is the elapsed time between the begin snap and end snap</p>
PRO <p><b>SQL Elapsed Time (s)</b> is a rough measure of how busy the database was during that interval</p>

@@00_end.sql
